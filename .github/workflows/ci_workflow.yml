name: From Monolith to K8s (Github Actions)
on: [ push ]

env:
  OWNER: salaboy
  GH_PAGES_BRANCH_NAME: gh-pages

permissions:
  packages: write

jobs:
  setup:
    runs-on: ubuntu-20.04
    steps:
      - name: Info
        run: echo "Building ${{ github.repository }} application, branch/tag ${{ github.ref_name}}"
      - name: From Monolith to K8S CI
        uses: mcruzdev/fmtok8s-ci@v0.1.17
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_branch: main
      - name: Set up Docker Meta
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr,
            type=semver,pattern={{raw}}

      - name: Docker Meta Output
        run: echo "Docker meta tags ${{ steps.docker_meta.outputs.tags }}"
    outputs:
      docker_tags: ${{ steps.docker_meta.outputs.tags }}
  build:
    needs: [ setup ]
    runs-on: ubuntu-20.04
    if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v') }}
    steps:
      - name: Checkout and Set up JDK 17 Temurin
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: temurin
          cache: 'maven'
      - name: Build application
        run: mvn package
      - name: Upload app.jar
        uses: actions/upload-artifact@v3
        with:
          name: app-jar
          path: target/app.jar
  publish:
    needs: [ setup, build ]
    runs-on: ubuntu-20.04
    if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download app.jar from build job
        uses: actions/download-artifact@v3
        with:
          name: app-jar
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Set up app.jar
        run: mkdir target && mv app.jar target/app.jar
      - name: Login to Github Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ env.OWNER }}
          password: ${{ secrets.PACKAGE_TOKEN }}
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ needs.setup.outputs.docker_tags }}
  build_publish_native:
    runs-on: ubuntu-20.04
    if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v') }}
    needs: [ setup, build ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up GraalVM 22.1.0
        uses: graalvm/setup-graalvm@v1
        with:
          version: '22.1.0'
          java-version: '17'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build native image
        run: mvn spring-boot:build-image -Dspring-boot.build-image.imageName=${{ needs.setup.outputs.docker_tags }}-native
      - name: Login to Github Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ env.OWNER }}
          password: ${{ secrets.PACKAGE_TOKEN }}
      - name: Publish native image
        run: docker push ${{ needs.setup.outputs.docker_tags }}-native
  publish_chart:
    runs-on: ubuntu-20.04
    needs: [ setup, build ]
    if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Change Chart.yml
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: 'helm/fmtok8s-email-service/Chart.yaml'
          propertyPath: 'version'
          value: '${{ github.ref_name }}'
          commitChange: false
          updateFile: true
      - name: Release Helm Chart
        uses: stefanprodan/helm-gh-pages@master
        with:
          charts_dir: helm
          token: ${{ secrets.PACKAGE_TOKEN }}
          repository: helm
          branch: ${{ env.GH_PAGES_BRANCH_NAME }}
          owner: ${{ env.OWNER }}